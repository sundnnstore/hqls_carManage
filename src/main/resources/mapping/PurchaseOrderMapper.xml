<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.sinoauto.dao.mapper.PurchaseOrderMapper">

	<resultMap type="com.sinoauto.dto.PurchaseOrderParamDto" id="orderList">
		<id column="order_id" property="orderId"/>
		<result column="ship_address_id" property="shipAddressId" />
		<association column="ship_address_id" property="shipAddress" select="com.sinoauto.dao.mapper.ShipAddressMapper.getShipAddressById" ></association>
		<collection column="order_id" property="partsList" select="com.sinoauto.dao.mapper.PartsMapper.findPartsListByOrderId"></collection>
	</resultMap>
	
	<!-- 中天采购订单 -->
	<!-- <resultMap id="purchOrder" type="com.sinoauto.dto.PurchaseOrderDto">
		查询订单的配件集合
		<collection property="parts" column="purchase_order_id"  select="com.sinoauto.dao.mapper.PartsMapper.findPartsByPurchOrderId"></collection>
	</resultMap> -->
	
	
	<select id="findOrder" parameterType="Integer" resultMap="orderList">
		select order_id, ship_address_id 
		from hqls_purchase_order 
		where store_id = #{storeId}
		<if test="orderStatus != null">
			and order_status = #{orderStatus}
		</if>
	</select>
	
	<select id="findOrderByOrderId" parameterType="Integer" resultMap="orderList">
		select order_id, ship_address_id, other_fee, remark
		from hqls_purchase_order
		where order_id = #{orderId}
	</select>
	
	<update id="payOperation" parameterType="HqlsPurchaseOrder">
		update hqls_purchase_order set
		   order_status = #{orderStatus}, 
		   pay_type = #{payType}, 
		   pay_no = #{payNo}, 
		   dml_time = now(), 
		   discount_fee = #{discountFee}, 
		   pay_fee = #{payFee}
	   WHERE 
		   purchase_order_id = #{purchaseOrderId}
	</update>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="allColumns">
        purchase_order_id, order_no, order_status, ship_address_id, pay_type, logistics_no, logistics_id, other_fee, total_fee, pay_no, remark, create_time, dml_time, discount_fee, pay_fee, store_id
	</sql>

	<!-- 新增 -->
	<insert id="insert" parameterType="HqlsPurchaseOrder" useGeneratedKeys="true" keyProperty="purchaseOrderId">
	    INSERT INTO hqls_purchase_order (
	        order_no, order_status, ship_address_id, pay_type, logistics_no, logistics_id, other_fee, total_fee, pay_no, remark, create_time, dml_time, discount_fee, pay_fee, store_id
	    ) VALUES (
	        #{orderNo}, #{orderStatus}, #{shipAddressId}, #{payType}, #{logisticsNo}, #{logisticsId}, #{otherFee}, #{totalFee}, #{payNo}, #{remark}, now(), now(), #{discountFee}, #{payFee}, #{storeId}        
	    )
	</insert>

	<!-- 修改 -->
	<update id="update" parameterType="HqlsPurchaseOrder">
	   UPDATE hqls_purchase_order SET
		   order_no = #{orderNo}, 
		   order_status = #{orderStatus}, 
		   ship_address_id = #{shipAddressId}, 
		   pay_type = #{payType}, 
		   logistics_no = #{logisticsNo}, 
		   logistics_id = #{logisticsId}, 
		   other_fee = #{otherFee}, 
		   total_fee = #{totalFee}, 
		   pay_no = #{payNo}, 
		   remark = #{remark}, 
		   dml_time = now(), 
		   discount_fee = #{discountFee}, 
		   pay_fee = #{payFee}, 
		   store_id = #{storeId}
	   WHERE 
		   purchase_order_id = #{purchaseOrderId}
	</update>
	
	<!-- 查询采购订单信息 -->
	<select id="findPurchaseOrderByContidion" resultType="com.sinoauto.dto.PurchaseOrderDto">
		select hpo.order_no,hpo.purchase_order_id,hpo.order_status,
			case when hpo.order_status=1 then '待支付' 
				 when hpo.order_status=2 then '待发货'
				 when hpo.order_status=3 then '待收货' 
				 when hpo.order_status=4 then '已完成' 
				 else '无效的标志号' end as order_status_name,
			hs.store_id,hs.store_name,hu.user_name,hu.mobile,hpo.create_time,hsa.address,
			hpo.total_fee,hp.parts_name,hp.parts_model,hp.parts_spec,hod.buy_count,hod.buy_price
		from hqls_purchase_order hpo
		INNER JOIN hqls_order_detail hod on hpo.purchase_order_id =hod.purchase_order_id
		INNER JOIN hqls_parts hp on hp.parts_id=hod.parts_id
		INNER JOIN hqls_store hs on hs.store_id=hpo.store_id
		INNER JOIN hqls_user_store hus on hus.store_id=hs.store_id
		INNER JOIN hqls_user hu on hu.user_id=hus.user_id
		INNER JOIN hqls_ship_address hsa on hsa.ship_address_id=hpo.ship_address_id
		where 1=1 
		<if test="orderStatus!=null"> and hpo.order_status=#{orderStatus}</if>
		<if test="storeId!=null"> and hs.store_id=#{storeId}</if>
		<if test="userName!=null"> and hu.user_name like CONCAT('%',#{userName},'%')</if>
		<if test="mobile!=null"> and hu.mobile like CONCAT('%',#{mobile},'%')</if>
	</select>
	
	<resultMap type="com.sinoauto.dto.PurchaseOrderDto" id="purchaseOrder">
		<id column="purchase_order_id" property="purchaseOrderId"/>
		<result column="order_status" property="orderStatus"/>
		<association column="order_status" property="orderStatusName" select="com.sinoauto.dao.mapper.DictMapper.getOrderStatusDesc"></association>
	</resultMap>
	
	<select id="findOrderListByContidion" resultMap="purchaseOrder">
		select hpo.purchase_order_id, hpo.order_no, hpo.create_time, hpo.total_fee, hpo.order_status,
				store.store_name,
				CONCAT(ship.province_name, ship.city_name, ship.county_name, ship.address) as address,
				ship.recipient as userName, ship.mobile
		from hqls_purchase_order as hpo
		left join hqls_store as store on hpo.store_id = store.store_id
		left join hqls_ship_address as ship on hpo.ship_address_id = ship.ship_address_id
		where 1=1
		<if test="orderStatus != null">
			and hpo.order_status = #{orderStatus}
		</if>
		<if test="storeId != null">
			and hpo.store_id = #{storeId}
		</if>
		<if test="userName != null and userName != ''">
			and ship.recipient like CONCAT('%', #{userName}, '%') 
		</if>
		<if test="mobile != null and mobile != ''">
			and ship.mobile like CONCAT('%', #{mobile}, '%') 
		</if>
		order by hpo.order_status
	</select>
	
</mapper>
